/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.Forum;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-03-11T20:51:24.548366+08:00[Asia/Taipei]")
@Validated
@Api(value = "project", description = "the project API")
public interface ProjectApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /project/{projectId}/forum : Get the Forum of a Project.
     * This API is used to get the Forum&#39;s metadata for a given project ID.  Target users: anyone who has READ permission to the project.&#39; 
     *
     * @param projectId The ID of a Project. (required)
     * @return Success (status code 200)
     */
    @ApiOperation(value = "Get the Forum of a Project.", nickname = "getForumByProjectId", notes = "This API is used to get the Forum's metadata for a given project ID.  Target users: anyone who has READ permission to the project.' ", response = Forum.class, authorizations = {
        
        @Authorization(value = "bearerAuth")
         }, tags={ "Discussion Services", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = Forum.class) })
    @GetMapping(
        value = "/project/{projectId}/forum",
        produces = { "application/json" }
    )
    default ResponseEntity<Forum> getForumByProjectId(@ApiParam(value = "The ID of a Project.",required=true) @PathVariable("projectId") String projectId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"etag\" : \"...\", \"id\" : \"...\", \"projectId\" : \"...\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
