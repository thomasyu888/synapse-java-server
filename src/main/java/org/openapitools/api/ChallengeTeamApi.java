/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-03-11T20:51:24.548366+08:00[Asia/Taipei]")
@Validated
@Api(value = "challengeTeam", description = "the challengeTeam API")
public interface ChallengeTeamApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * DELETE /challengeTeam/{challengeTeamId} : De-register a Team from a Challenge.
     * De-register a Team from a Challenge. You must be a member of the Challenge&#39;s participant Team (i.e. you must be already registered for the Challenge) and be an administrator on the Team being de-registered. 
     *
     * @param challengeTeamId The ID of the challenge team. (required)
     * @return The resource was deleted successfully. (status code 204)
     */
    @ApiOperation(value = "De-register a Team from a Challenge.", nickname = "deleteChallengeTeam", notes = "De-register a Team from a Challenge. You must be a member of the Challenge's participant Team (i.e. you must be already registered for the Challenge) and be an administrator on the Team being de-registered. ", authorizations = {
        
        @Authorization(value = "bearerAuth")
         }, tags={ "Challenge Services", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "The resource was deleted successfully.") })
    @DeleteMapping(
        value = "/challengeTeam/{challengeTeamId}"
    )
    default ResponseEntity<Void> deleteChallengeTeam(@ApiParam(value = "The ID of the challenge team.",required=true) @PathVariable("challengeTeamId") Integer challengeTeamId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
