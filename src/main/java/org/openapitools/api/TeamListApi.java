/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.IdList;
import org.openapitools.model.ListWrapperOfTeam;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-03-11T20:51:24.548366+08:00[Asia/Taipei]")
@Validated
@Api(value = "teamList", description = "the teamList API")
public interface TeamListApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /teamList : Retrieve a list of Teams given their IDs.
     * Retrieve a list of Teams given their IDs. Invalid IDs in the list are ignored:  The results list is simply smaller than the list of IDs passed in. 
     *
     * @param idList  (optional)
     * @return Success (status code 200)
     */
    @ApiOperation(value = "Retrieve a list of Teams given their IDs.", nickname = "listTeams", notes = "Retrieve a list of Teams given their IDs. Invalid IDs in the list are ignored:  The results list is simply smaller than the list of IDs passed in. ", response = ListWrapperOfTeam.class, authorizations = {
        
        @Authorization(value = "bearerAuth")
         }, tags={ "Team Services", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = ListWrapperOfTeam.class) })
    @PostMapping(
        value = "/teamList",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<ListWrapperOfTeam> listTeams(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) IdList idList) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"list\" : [ { \"canPublicJoin\" : true, \"createdBy\" : \"...\", \"createdOn\" : \"...\", \"description\" : \"...\", \"etag\" : \"...\", \"icon\" : \"...\", \"id\" : \"...\", \"modifiedBy\" : \"...\", \"modifiedOn\" : \"...\", \"name\" : \"...\" }, { \"canPublicJoin\" : true, \"createdBy\" : \"...\", \"createdOn\" : \"...\", \"description\" : \"...\", \"etag\" : \"...\", \"icon\" : \"...\", \"id\" : \"...\", \"modifiedBy\" : \"...\", \"modifiedOn\" : \"...\", \"name\" : \"...\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
