/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.PaginatedResultsOfUserGroup;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-03-11T20:51:24.548366+08:00[Asia/Taipei]")
@Validated
@Api(value = "userGroup", description = "the userGroup API")
public interface UserGroupApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /userGroup : Get the user-groups in the system.
     * Get the user-groups in the system
     *
     * @param ascending Return results in ascending order. (optional, default to true)
     * @param limit the maximum number of results to return. (optional, default to 10)
     * @param offset the starting index of the returned results. (optional, default to 0)
     * @param sort Sort results. (optional, default to &quot;NONE&quot;)
     * @param body Get the user-groups in the system (optional)
     * @return Success (status code 200)
     */
    @ApiOperation(value = "Get the user-groups in the system.", nickname = "getUserGroups", notes = "Get the user-groups in the system", response = PaginatedResultsOfUserGroup.class, authorizations = {
        
        @Authorization(value = "bearerAuth")
         }, tags={ "User Profile Services", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success", response = PaginatedResultsOfUserGroup.class) })
    @GetMapping(
        value = "/userGroup",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<PaginatedResultsOfUserGroup> getUserGroups(@ApiParam(value = "Return results in ascending order.", defaultValue = "true") @Valid @RequestParam(value = "ascending", required = false, defaultValue="true") Boolean ascending,@ApiParam(value = "the maximum number of results to return.", defaultValue = "10") @Valid @RequestParam(value = "limit", required = false, defaultValue="10") Integer limit,@Min(0)@ApiParam(value = "the starting index of the returned results.", defaultValue = "0") @Valid @RequestParam(value = "offset", required = false, defaultValue="0") Integer offset,@ApiParam(value = "Sort results.", defaultValue = "NONE") @Valid @RequestParam(value = "sort", required = false, defaultValue="NONE") String sort,@ApiParam(value = "Get the user-groups in the system"  )  @Valid @RequestBody(required = false) Object body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"results\" : [ { \"creationDate\" : \"...\", \"etag\" : \"...\", \"id\" : \"...\", \"isIndividual\" : true, \"uri\" : \"...\" }, { \"creationDate\" : \"...\", \"etag\" : \"...\", \"id\" : \"...\", \"isIndividual\" : true, \"uri\" : \"...\" } ], \"totalNumberOfResults\" : 12345 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
